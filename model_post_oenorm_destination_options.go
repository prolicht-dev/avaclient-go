/*
AVACloud API 2.0.0

AVACloud API specification

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
)

// checks if the PostOenormDestinationOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostOenormDestinationOptions{}

// PostOenormDestinationOptions Options for conversions to Oenorm
type PostOenormDestinationOptions struct {
	DestinationOenormType DestinationOenormType `json:"destinationOenormType"`
	// Defaults to false. If this is enabled, the converter will try to ensure that the project structure can be mapped to Oenorm. It might introduce additional group levels to ensure a compatible target
	TryRepairProjectStructure bool `json:"tryRepairProjectStructure"`
	// If this option is enabled, AVACloud will not attempt to force a schema-compliant Xml output for Ã–Norm targets that are Xml based. By default, AVACloud will try to add required fields, even if no data is present, with sensible defaults. This behavior can be disabled with this option.
	SkipTryEnforceSchemaCompliantXmlOutput bool `json:"skipTryEnforceSchemaCompliantXmlOutput"`
	// If this is enabled, unprintable characters are removed from text elements. Otherwise, the conversion might fail in case some text content contains characters that are not allowed in XML output formats. Defaults to true.
	RemoveUnprintableCharactersFromTexts bool `json:"removeUnprintableCharactersFromTexts"`
}

// NewPostOenormDestinationOptions instantiates a new PostOenormDestinationOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostOenormDestinationOptions(destinationOenormType DestinationOenormType, tryRepairProjectStructure bool, skipTryEnforceSchemaCompliantXmlOutput bool, removeUnprintableCharactersFromTexts bool) *PostOenormDestinationOptions {
	this := PostOenormDestinationOptions{}
	this.DestinationOenormType = destinationOenormType
	this.TryRepairProjectStructure = tryRepairProjectStructure
	this.SkipTryEnforceSchemaCompliantXmlOutput = skipTryEnforceSchemaCompliantXmlOutput
	this.RemoveUnprintableCharactersFromTexts = removeUnprintableCharactersFromTexts
	return &this
}

// NewPostOenormDestinationOptionsWithDefaults instantiates a new PostOenormDestinationOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostOenormDestinationOptionsWithDefaults() *PostOenormDestinationOptions {
	this := PostOenormDestinationOptions{}
	return &this
}

// GetDestinationOenormType returns the DestinationOenormType field value
func (o *PostOenormDestinationOptions) GetDestinationOenormType() DestinationOenormType {
	if o == nil {
		var ret DestinationOenormType
		return ret
	}

	return o.DestinationOenormType
}

// GetDestinationOenormTypeOk returns a tuple with the DestinationOenormType field value
// and a boolean to check if the value has been set.
func (o *PostOenormDestinationOptions) GetDestinationOenormTypeOk() (*DestinationOenormType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationOenormType, true
}

// SetDestinationOenormType sets field value
func (o *PostOenormDestinationOptions) SetDestinationOenormType(v DestinationOenormType) {
	o.DestinationOenormType = v
}

// GetTryRepairProjectStructure returns the TryRepairProjectStructure field value
func (o *PostOenormDestinationOptions) GetTryRepairProjectStructure() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TryRepairProjectStructure
}

// GetTryRepairProjectStructureOk returns a tuple with the TryRepairProjectStructure field value
// and a boolean to check if the value has been set.
func (o *PostOenormDestinationOptions) GetTryRepairProjectStructureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TryRepairProjectStructure, true
}

// SetTryRepairProjectStructure sets field value
func (o *PostOenormDestinationOptions) SetTryRepairProjectStructure(v bool) {
	o.TryRepairProjectStructure = v
}

// GetSkipTryEnforceSchemaCompliantXmlOutput returns the SkipTryEnforceSchemaCompliantXmlOutput field value
func (o *PostOenormDestinationOptions) GetSkipTryEnforceSchemaCompliantXmlOutput() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SkipTryEnforceSchemaCompliantXmlOutput
}

// GetSkipTryEnforceSchemaCompliantXmlOutputOk returns a tuple with the SkipTryEnforceSchemaCompliantXmlOutput field value
// and a boolean to check if the value has been set.
func (o *PostOenormDestinationOptions) GetSkipTryEnforceSchemaCompliantXmlOutputOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SkipTryEnforceSchemaCompliantXmlOutput, true
}

// SetSkipTryEnforceSchemaCompliantXmlOutput sets field value
func (o *PostOenormDestinationOptions) SetSkipTryEnforceSchemaCompliantXmlOutput(v bool) {
	o.SkipTryEnforceSchemaCompliantXmlOutput = v
}

// GetRemoveUnprintableCharactersFromTexts returns the RemoveUnprintableCharactersFromTexts field value
func (o *PostOenormDestinationOptions) GetRemoveUnprintableCharactersFromTexts() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RemoveUnprintableCharactersFromTexts
}

// GetRemoveUnprintableCharactersFromTextsOk returns a tuple with the RemoveUnprintableCharactersFromTexts field value
// and a boolean to check if the value has been set.
func (o *PostOenormDestinationOptions) GetRemoveUnprintableCharactersFromTextsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoveUnprintableCharactersFromTexts, true
}

// SetRemoveUnprintableCharactersFromTexts sets field value
func (o *PostOenormDestinationOptions) SetRemoveUnprintableCharactersFromTexts(v bool) {
	o.RemoveUnprintableCharactersFromTexts = v
}

func (o PostOenormDestinationOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostOenormDestinationOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationOenormType"] = o.DestinationOenormType
	toSerialize["tryRepairProjectStructure"] = o.TryRepairProjectStructure
	toSerialize["skipTryEnforceSchemaCompliantXmlOutput"] = o.SkipTryEnforceSchemaCompliantXmlOutput
	toSerialize["removeUnprintableCharactersFromTexts"] = o.RemoveUnprintableCharactersFromTexts
	return toSerialize, nil
}

type NullablePostOenormDestinationOptions struct {
	value *PostOenormDestinationOptions
	isSet bool
}

func (v NullablePostOenormDestinationOptions) Get() *PostOenormDestinationOptions {
	return v.value
}

func (v *NullablePostOenormDestinationOptions) Set(val *PostOenormDestinationOptions) {
	v.value = val
	v.isSet = true
}

func (v NullablePostOenormDestinationOptions) IsSet() bool {
	return v.isSet
}

func (v *NullablePostOenormDestinationOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostOenormDestinationOptions(val *PostOenormDestinationOptions) *NullablePostOenormDestinationOptions {
	return &NullablePostOenormDestinationOptions{value: val, isSet: true}
}

func (v NullablePostOenormDestinationOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostOenormDestinationOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

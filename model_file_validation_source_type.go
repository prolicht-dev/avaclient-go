/*
AVACloud API 1.45.0

AVACloud API specification

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
	"fmt"
)

// FileValidationSourceType This enum represents the source type for a file based validation operation
type FileValidationSourceType string

// List of FileValidationSourceType
const (
	FILEVALIDATIONSOURCETYPE_GAEB   FileValidationSourceType = "Gaeb"
	FILEVALIDATIONSOURCETYPE_OENORM FileValidationSourceType = "Oenorm"
)

// All allowed values of FileValidationSourceType enum
var AllowedFileValidationSourceTypeEnumValues = []FileValidationSourceType{
	"Gaeb",
	"Oenorm",
}

func (v *FileValidationSourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FileValidationSourceType(value)
	for _, existing := range AllowedFileValidationSourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FileValidationSourceType", value)
}

// NewFileValidationSourceTypeFromValue returns a pointer to a valid FileValidationSourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFileValidationSourceTypeFromValue(v string) (*FileValidationSourceType, error) {
	ev := FileValidationSourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FileValidationSourceType: valid values are %v", v, AllowedFileValidationSourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FileValidationSourceType) IsValid() bool {
	for _, existing := range AllowedFileValidationSourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FileValidationSourceType value
func (v FileValidationSourceType) Ptr() *FileValidationSourceType {
	return &v
}

type NullableFileValidationSourceType struct {
	value *FileValidationSourceType
	isSet bool
}

func (v NullableFileValidationSourceType) Get() *FileValidationSourceType {
	return v.value
}

func (v *NullableFileValidationSourceType) Set(val *FileValidationSourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableFileValidationSourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableFileValidationSourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileValidationSourceType(val *FileValidationSourceType) *NullableFileValidationSourceType {
	return &NullableFileValidationSourceType{value: val, isSet: true}
}

func (v NullableFileValidationSourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileValidationSourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

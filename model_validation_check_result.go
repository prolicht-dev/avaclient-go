/*
AVACloud API 1.45.0

AVACloud API specification

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
)

// checks if the ValidationCheckResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationCheckResult{}

// ValidationCheckResult This class models the results of a single check performed during a validation action
type ValidationCheckResult struct {
	Severity  ValidationSeverity  `json:"severity"`
	CheckType ValidationCheckType `json:"checkType"`
	// A human readable message describing the result of the check.
	Message                         *string                          `json:"message,omitempty"`
	ObjectValidationCheckDetails    *ObjectValidationCheckDetails    `json:"objectValidationCheckDetails,omitempty"`
	XmlSchemaValidationCheckDetails *XmlSchemaValidationCheckDetails `json:"xmlSchemaValidationCheckDetails,omitempty"`
	ProjectValidationCheckDetails   *ProjectValidationCheckDetails   `json:"projectValidationCheckDetails,omitempty"`
}

// NewValidationCheckResult instantiates a new ValidationCheckResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationCheckResult(severity ValidationSeverity, checkType ValidationCheckType) *ValidationCheckResult {
	this := ValidationCheckResult{}
	this.Severity = severity
	this.CheckType = checkType
	return &this
}

// NewValidationCheckResultWithDefaults instantiates a new ValidationCheckResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationCheckResultWithDefaults() *ValidationCheckResult {
	this := ValidationCheckResult{}
	return &this
}

// GetSeverity returns the Severity field value
func (o *ValidationCheckResult) GetSeverity() ValidationSeverity {
	if o == nil {
		var ret ValidationSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetSeverityOk() (*ValidationSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ValidationCheckResult) SetSeverity(v ValidationSeverity) {
	o.Severity = v
}

// GetCheckType returns the CheckType field value
func (o *ValidationCheckResult) GetCheckType() ValidationCheckType {
	if o == nil {
		var ret ValidationCheckType
		return ret
	}

	return o.CheckType
}

// GetCheckTypeOk returns a tuple with the CheckType field value
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetCheckTypeOk() (*ValidationCheckType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckType, true
}

// SetCheckType sets field value
func (o *ValidationCheckResult) SetCheckType(v ValidationCheckType) {
	o.CheckType = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ValidationCheckResult) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ValidationCheckResult) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ValidationCheckResult) SetMessage(v string) {
	o.Message = &v
}

// GetObjectValidationCheckDetails returns the ObjectValidationCheckDetails field value if set, zero value otherwise.
func (o *ValidationCheckResult) GetObjectValidationCheckDetails() ObjectValidationCheckDetails {
	if o == nil || IsNil(o.ObjectValidationCheckDetails) {
		var ret ObjectValidationCheckDetails
		return ret
	}
	return *o.ObjectValidationCheckDetails
}

// GetObjectValidationCheckDetailsOk returns a tuple with the ObjectValidationCheckDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetObjectValidationCheckDetailsOk() (*ObjectValidationCheckDetails, bool) {
	if o == nil || IsNil(o.ObjectValidationCheckDetails) {
		return nil, false
	}
	return o.ObjectValidationCheckDetails, true
}

// HasObjectValidationCheckDetails returns a boolean if a field has been set.
func (o *ValidationCheckResult) HasObjectValidationCheckDetails() bool {
	if o != nil && !IsNil(o.ObjectValidationCheckDetails) {
		return true
	}

	return false
}

// SetObjectValidationCheckDetails gets a reference to the given ObjectValidationCheckDetails and assigns it to the ObjectValidationCheckDetails field.
func (o *ValidationCheckResult) SetObjectValidationCheckDetails(v ObjectValidationCheckDetails) {
	o.ObjectValidationCheckDetails = &v
}

// GetXmlSchemaValidationCheckDetails returns the XmlSchemaValidationCheckDetails field value if set, zero value otherwise.
func (o *ValidationCheckResult) GetXmlSchemaValidationCheckDetails() XmlSchemaValidationCheckDetails {
	if o == nil || IsNil(o.XmlSchemaValidationCheckDetails) {
		var ret XmlSchemaValidationCheckDetails
		return ret
	}
	return *o.XmlSchemaValidationCheckDetails
}

// GetXmlSchemaValidationCheckDetailsOk returns a tuple with the XmlSchemaValidationCheckDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetXmlSchemaValidationCheckDetailsOk() (*XmlSchemaValidationCheckDetails, bool) {
	if o == nil || IsNil(o.XmlSchemaValidationCheckDetails) {
		return nil, false
	}
	return o.XmlSchemaValidationCheckDetails, true
}

// HasXmlSchemaValidationCheckDetails returns a boolean if a field has been set.
func (o *ValidationCheckResult) HasXmlSchemaValidationCheckDetails() bool {
	if o != nil && !IsNil(o.XmlSchemaValidationCheckDetails) {
		return true
	}

	return false
}

// SetXmlSchemaValidationCheckDetails gets a reference to the given XmlSchemaValidationCheckDetails and assigns it to the XmlSchemaValidationCheckDetails field.
func (o *ValidationCheckResult) SetXmlSchemaValidationCheckDetails(v XmlSchemaValidationCheckDetails) {
	o.XmlSchemaValidationCheckDetails = &v
}

// GetProjectValidationCheckDetails returns the ProjectValidationCheckDetails field value if set, zero value otherwise.
func (o *ValidationCheckResult) GetProjectValidationCheckDetails() ProjectValidationCheckDetails {
	if o == nil || IsNil(o.ProjectValidationCheckDetails) {
		var ret ProjectValidationCheckDetails
		return ret
	}
	return *o.ProjectValidationCheckDetails
}

// GetProjectValidationCheckDetailsOk returns a tuple with the ProjectValidationCheckDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationCheckResult) GetProjectValidationCheckDetailsOk() (*ProjectValidationCheckDetails, bool) {
	if o == nil || IsNil(o.ProjectValidationCheckDetails) {
		return nil, false
	}
	return o.ProjectValidationCheckDetails, true
}

// HasProjectValidationCheckDetails returns a boolean if a field has been set.
func (o *ValidationCheckResult) HasProjectValidationCheckDetails() bool {
	if o != nil && !IsNil(o.ProjectValidationCheckDetails) {
		return true
	}

	return false
}

// SetProjectValidationCheckDetails gets a reference to the given ProjectValidationCheckDetails and assigns it to the ProjectValidationCheckDetails field.
func (o *ValidationCheckResult) SetProjectValidationCheckDetails(v ProjectValidationCheckDetails) {
	o.ProjectValidationCheckDetails = &v
}

func (o ValidationCheckResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationCheckResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["severity"] = o.Severity
	toSerialize["checkType"] = o.CheckType
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ObjectValidationCheckDetails) {
		toSerialize["objectValidationCheckDetails"] = o.ObjectValidationCheckDetails
	}
	if !IsNil(o.XmlSchemaValidationCheckDetails) {
		toSerialize["xmlSchemaValidationCheckDetails"] = o.XmlSchemaValidationCheckDetails
	}
	if !IsNil(o.ProjectValidationCheckDetails) {
		toSerialize["projectValidationCheckDetails"] = o.ProjectValidationCheckDetails
	}
	return toSerialize, nil
}

type NullableValidationCheckResult struct {
	value *ValidationCheckResult
	isSet bool
}

func (v NullableValidationCheckResult) Get() *ValidationCheckResult {
	return v.value
}

func (v *NullableValidationCheckResult) Set(val *ValidationCheckResult) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationCheckResult) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationCheckResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationCheckResult(val *ValidationCheckResult) *NullableValidationCheckResult {
	return &NullableValidationCheckResult{value: val, isSet: true}
}

func (v NullableValidationCheckResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationCheckResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

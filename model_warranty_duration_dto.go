/*
AVACloud API 2.0.0

AVACloud API specification

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
)

// checks if the WarrantyDurationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WarrantyDurationDto{}

// WarrantyDurationDto This class does not represent a typical `TimeSpan` but has a scalar value int Duration and a DurationUnit Unit to represent durations as typically used in contracts, e.g. 5 Months
type WarrantyDurationDto struct {
	// The scalar value of the duration. This value must be equal to or bigger than zero (>= 0). Negative values can not be set and will be ignored.
	Duration int32           `json:"duration"`
	Unit     DurationUnitDto `json:"unit"`
}

// NewWarrantyDurationDto instantiates a new WarrantyDurationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarrantyDurationDto(duration int32, unit DurationUnitDto) *WarrantyDurationDto {
	this := WarrantyDurationDto{}
	this.Duration = duration
	this.Unit = unit
	return &this
}

// NewWarrantyDurationDtoWithDefaults instantiates a new WarrantyDurationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarrantyDurationDtoWithDefaults() *WarrantyDurationDto {
	this := WarrantyDurationDto{}
	return &this
}

// GetDuration returns the Duration field value
func (o *WarrantyDurationDto) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *WarrantyDurationDto) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *WarrantyDurationDto) SetDuration(v int32) {
	o.Duration = v
}

// GetUnit returns the Unit field value
func (o *WarrantyDurationDto) GetUnit() DurationUnitDto {
	if o == nil {
		var ret DurationUnitDto
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *WarrantyDurationDto) GetUnitOk() (*DurationUnitDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *WarrantyDurationDto) SetUnit(v DurationUnitDto) {
	o.Unit = v
}

func (o WarrantyDurationDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WarrantyDurationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["unit"] = o.Unit
	return toSerialize, nil
}

type NullableWarrantyDurationDto struct {
	value *WarrantyDurationDto
	isSet bool
}

func (v NullableWarrantyDurationDto) Get() *WarrantyDurationDto {
	return v.value
}

func (v *NullableWarrantyDurationDto) Set(val *WarrantyDurationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableWarrantyDurationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableWarrantyDurationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarrantyDurationDto(val *WarrantyDurationDto) *NullableWarrantyDurationDto {
	return &NullableWarrantyDurationDto{value: val, isSet: true}
}

func (v NullableWarrantyDurationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarrantyDurationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

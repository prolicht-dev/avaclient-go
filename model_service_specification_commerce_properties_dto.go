/*
AVACloud API 1.51.0

AVACloud API specification

API version: 1.51.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
	"time"
)

// checks if the ServiceSpecificationCommercePropertiesDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSpecificationCommercePropertiesDto{}

// ServiceSpecificationCommercePropertiesDto This class represents properties used in commerce exchange scenarios
type ServiceSpecificationCommercePropertiesDto struct {
	// The date until the price is valid or fixed.
	FixedPriceDate *time.Time `json:"fixedPriceDate,omitempty"`
	// The date of the delivery voucher note.
	DeliveryVoucherDate *time.Time `json:"deliveryVoucherDate,omitempty"`
	// The actual date of delivery.
	DeliveryDate *time.Time `json:"deliveryDate,omitempty"`
	// The number of the inquiry, usually in a context of offer requests.
	InquiryNumber *string `json:"inquiryNumber,omitempty"`
	// The number of the offer, usually in a context of an offer.
	OfferNumber *string `json:"offerNumber,omitempty"`
	// The order number, usually in the context of a grant or contract.
	OrderNumber *string `json:"orderNumber,omitempty"`
	// The order confirmation number
	OrderConfirmationNumber *string `json:"orderConfirmationNumber,omitempty"`
	// The number of the delivery, e.g. on the delivery note voucher.
	DeliveryNumber *string `json:"deliveryNumber,omitempty"`
	// The reference number of the customer / buyer.
	CustomerReferenceNumber *string `json:"customerReferenceNumber,omitempty"`
	// The reference number of the supplier / bidder.
	SupplierReferenceNumber *string `json:"supplierReferenceNumber,omitempty"`
	// The type of shippment.
	ShippingType *string                `json:"shippingType,omitempty"`
	InquiryType  CommerceInquiryTypeDto `json:"inquiryType"`
}

// NewServiceSpecificationCommercePropertiesDto instantiates a new ServiceSpecificationCommercePropertiesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSpecificationCommercePropertiesDto(inquiryType CommerceInquiryTypeDto) *ServiceSpecificationCommercePropertiesDto {
	this := ServiceSpecificationCommercePropertiesDto{}
	this.InquiryType = inquiryType
	return &this
}

// NewServiceSpecificationCommercePropertiesDtoWithDefaults instantiates a new ServiceSpecificationCommercePropertiesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSpecificationCommercePropertiesDtoWithDefaults() *ServiceSpecificationCommercePropertiesDto {
	this := ServiceSpecificationCommercePropertiesDto{}
	return &this
}

// GetFixedPriceDate returns the FixedPriceDate field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetFixedPriceDate() time.Time {
	if o == nil || IsNil(o.FixedPriceDate) {
		var ret time.Time
		return ret
	}
	return *o.FixedPriceDate
}

// GetFixedPriceDateOk returns a tuple with the FixedPriceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetFixedPriceDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FixedPriceDate) {
		return nil, false
	}
	return o.FixedPriceDate, true
}

// HasFixedPriceDate returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasFixedPriceDate() bool {
	if o != nil && !IsNil(o.FixedPriceDate) {
		return true
	}

	return false
}

// SetFixedPriceDate gets a reference to the given time.Time and assigns it to the FixedPriceDate field.
func (o *ServiceSpecificationCommercePropertiesDto) SetFixedPriceDate(v time.Time) {
	o.FixedPriceDate = &v
}

// GetDeliveryVoucherDate returns the DeliveryVoucherDate field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryVoucherDate() time.Time {
	if o == nil || IsNil(o.DeliveryVoucherDate) {
		var ret time.Time
		return ret
	}
	return *o.DeliveryVoucherDate
}

// GetDeliveryVoucherDateOk returns a tuple with the DeliveryVoucherDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryVoucherDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveryVoucherDate) {
		return nil, false
	}
	return o.DeliveryVoucherDate, true
}

// HasDeliveryVoucherDate returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasDeliveryVoucherDate() bool {
	if o != nil && !IsNil(o.DeliveryVoucherDate) {
		return true
	}

	return false
}

// SetDeliveryVoucherDate gets a reference to the given time.Time and assigns it to the DeliveryVoucherDate field.
func (o *ServiceSpecificationCommercePropertiesDto) SetDeliveryVoucherDate(v time.Time) {
	o.DeliveryVoucherDate = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryDate() time.Time {
	if o == nil || IsNil(o.DeliveryDate) {
		var ret time.Time
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasDeliveryDate() bool {
	if o != nil && !IsNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given time.Time and assigns it to the DeliveryDate field.
func (o *ServiceSpecificationCommercePropertiesDto) SetDeliveryDate(v time.Time) {
	o.DeliveryDate = &v
}

// GetInquiryNumber returns the InquiryNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetInquiryNumber() string {
	if o == nil || IsNil(o.InquiryNumber) {
		var ret string
		return ret
	}
	return *o.InquiryNumber
}

// GetInquiryNumberOk returns a tuple with the InquiryNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetInquiryNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InquiryNumber) {
		return nil, false
	}
	return o.InquiryNumber, true
}

// HasInquiryNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasInquiryNumber() bool {
	if o != nil && !IsNil(o.InquiryNumber) {
		return true
	}

	return false
}

// SetInquiryNumber gets a reference to the given string and assigns it to the InquiryNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetInquiryNumber(v string) {
	o.InquiryNumber = &v
}

// GetOfferNumber returns the OfferNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetOfferNumber() string {
	if o == nil || IsNil(o.OfferNumber) {
		var ret string
		return ret
	}
	return *o.OfferNumber
}

// GetOfferNumberOk returns a tuple with the OfferNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetOfferNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OfferNumber) {
		return nil, false
	}
	return o.OfferNumber, true
}

// HasOfferNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasOfferNumber() bool {
	if o != nil && !IsNil(o.OfferNumber) {
		return true
	}

	return false
}

// SetOfferNumber gets a reference to the given string and assigns it to the OfferNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetOfferNumber(v string) {
	o.OfferNumber = &v
}

// GetOrderNumber returns the OrderNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetOrderNumber() string {
	if o == nil || IsNil(o.OrderNumber) {
		var ret string
		return ret
	}
	return *o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OrderNumber) {
		return nil, false
	}
	return o.OrderNumber, true
}

// HasOrderNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasOrderNumber() bool {
	if o != nil && !IsNil(o.OrderNumber) {
		return true
	}

	return false
}

// SetOrderNumber gets a reference to the given string and assigns it to the OrderNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetOrderNumber(v string) {
	o.OrderNumber = &v
}

// GetOrderConfirmationNumber returns the OrderConfirmationNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetOrderConfirmationNumber() string {
	if o == nil || IsNil(o.OrderConfirmationNumber) {
		var ret string
		return ret
	}
	return *o.OrderConfirmationNumber
}

// GetOrderConfirmationNumberOk returns a tuple with the OrderConfirmationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetOrderConfirmationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OrderConfirmationNumber) {
		return nil, false
	}
	return o.OrderConfirmationNumber, true
}

// HasOrderConfirmationNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasOrderConfirmationNumber() bool {
	if o != nil && !IsNil(o.OrderConfirmationNumber) {
		return true
	}

	return false
}

// SetOrderConfirmationNumber gets a reference to the given string and assigns it to the OrderConfirmationNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetOrderConfirmationNumber(v string) {
	o.OrderConfirmationNumber = &v
}

// GetDeliveryNumber returns the DeliveryNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryNumber() string {
	if o == nil || IsNil(o.DeliveryNumber) {
		var ret string
		return ret
	}
	return *o.DeliveryNumber
}

// GetDeliveryNumberOk returns a tuple with the DeliveryNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetDeliveryNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryNumber) {
		return nil, false
	}
	return o.DeliveryNumber, true
}

// HasDeliveryNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasDeliveryNumber() bool {
	if o != nil && !IsNil(o.DeliveryNumber) {
		return true
	}

	return false
}

// SetDeliveryNumber gets a reference to the given string and assigns it to the DeliveryNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetDeliveryNumber(v string) {
	o.DeliveryNumber = &v
}

// GetCustomerReferenceNumber returns the CustomerReferenceNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetCustomerReferenceNumber() string {
	if o == nil || IsNil(o.CustomerReferenceNumber) {
		var ret string
		return ret
	}
	return *o.CustomerReferenceNumber
}

// GetCustomerReferenceNumberOk returns a tuple with the CustomerReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetCustomerReferenceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReferenceNumber) {
		return nil, false
	}
	return o.CustomerReferenceNumber, true
}

// HasCustomerReferenceNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasCustomerReferenceNumber() bool {
	if o != nil && !IsNil(o.CustomerReferenceNumber) {
		return true
	}

	return false
}

// SetCustomerReferenceNumber gets a reference to the given string and assigns it to the CustomerReferenceNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetCustomerReferenceNumber(v string) {
	o.CustomerReferenceNumber = &v
}

// GetSupplierReferenceNumber returns the SupplierReferenceNumber field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetSupplierReferenceNumber() string {
	if o == nil || IsNil(o.SupplierReferenceNumber) {
		var ret string
		return ret
	}
	return *o.SupplierReferenceNumber
}

// GetSupplierReferenceNumberOk returns a tuple with the SupplierReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetSupplierReferenceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SupplierReferenceNumber) {
		return nil, false
	}
	return o.SupplierReferenceNumber, true
}

// HasSupplierReferenceNumber returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasSupplierReferenceNumber() bool {
	if o != nil && !IsNil(o.SupplierReferenceNumber) {
		return true
	}

	return false
}

// SetSupplierReferenceNumber gets a reference to the given string and assigns it to the SupplierReferenceNumber field.
func (o *ServiceSpecificationCommercePropertiesDto) SetSupplierReferenceNumber(v string) {
	o.SupplierReferenceNumber = &v
}

// GetShippingType returns the ShippingType field value if set, zero value otherwise.
func (o *ServiceSpecificationCommercePropertiesDto) GetShippingType() string {
	if o == nil || IsNil(o.ShippingType) {
		var ret string
		return ret
	}
	return *o.ShippingType
}

// GetShippingTypeOk returns a tuple with the ShippingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetShippingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingType) {
		return nil, false
	}
	return o.ShippingType, true
}

// HasShippingType returns a boolean if a field has been set.
func (o *ServiceSpecificationCommercePropertiesDto) HasShippingType() bool {
	if o != nil && !IsNil(o.ShippingType) {
		return true
	}

	return false
}

// SetShippingType gets a reference to the given string and assigns it to the ShippingType field.
func (o *ServiceSpecificationCommercePropertiesDto) SetShippingType(v string) {
	o.ShippingType = &v
}

// GetInquiryType returns the InquiryType field value
func (o *ServiceSpecificationCommercePropertiesDto) GetInquiryType() CommerceInquiryTypeDto {
	if o == nil {
		var ret CommerceInquiryTypeDto
		return ret
	}

	return o.InquiryType
}

// GetInquiryTypeOk returns a tuple with the InquiryType field value
// and a boolean to check if the value has been set.
func (o *ServiceSpecificationCommercePropertiesDto) GetInquiryTypeOk() (*CommerceInquiryTypeDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InquiryType, true
}

// SetInquiryType sets field value
func (o *ServiceSpecificationCommercePropertiesDto) SetInquiryType(v CommerceInquiryTypeDto) {
	o.InquiryType = v
}

func (o ServiceSpecificationCommercePropertiesDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSpecificationCommercePropertiesDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FixedPriceDate) {
		toSerialize["fixedPriceDate"] = o.FixedPriceDate
	}
	if !IsNil(o.DeliveryVoucherDate) {
		toSerialize["deliveryVoucherDate"] = o.DeliveryVoucherDate
	}
	if !IsNil(o.DeliveryDate) {
		toSerialize["deliveryDate"] = o.DeliveryDate
	}
	if !IsNil(o.InquiryNumber) {
		toSerialize["inquiryNumber"] = o.InquiryNumber
	}
	if !IsNil(o.OfferNumber) {
		toSerialize["offerNumber"] = o.OfferNumber
	}
	if !IsNil(o.OrderNumber) {
		toSerialize["orderNumber"] = o.OrderNumber
	}
	if !IsNil(o.OrderConfirmationNumber) {
		toSerialize["orderConfirmationNumber"] = o.OrderConfirmationNumber
	}
	if !IsNil(o.DeliveryNumber) {
		toSerialize["deliveryNumber"] = o.DeliveryNumber
	}
	if !IsNil(o.CustomerReferenceNumber) {
		toSerialize["customerReferenceNumber"] = o.CustomerReferenceNumber
	}
	if !IsNil(o.SupplierReferenceNumber) {
		toSerialize["supplierReferenceNumber"] = o.SupplierReferenceNumber
	}
	if !IsNil(o.ShippingType) {
		toSerialize["shippingType"] = o.ShippingType
	}
	toSerialize["inquiryType"] = o.InquiryType
	return toSerialize, nil
}

type NullableServiceSpecificationCommercePropertiesDto struct {
	value *ServiceSpecificationCommercePropertiesDto
	isSet bool
}

func (v NullableServiceSpecificationCommercePropertiesDto) Get() *ServiceSpecificationCommercePropertiesDto {
	return v.value
}

func (v *NullableServiceSpecificationCommercePropertiesDto) Set(val *ServiceSpecificationCommercePropertiesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSpecificationCommercePropertiesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSpecificationCommercePropertiesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSpecificationCommercePropertiesDto(val *ServiceSpecificationCommercePropertiesDto) *NullableServiceSpecificationCommercePropertiesDto {
	return &NullableServiceSpecificationCommercePropertiesDto{value: val, isSet: true}
}

func (v NullableServiceSpecificationCommercePropertiesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSpecificationCommercePropertiesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

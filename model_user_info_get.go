/*
AVACloud API 1.51.0

AVACloud API specification

API version: 1.51.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
)

// checks if the UserInfoGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserInfoGet{}

// UserInfoGet struct for UserInfoGet
type UserInfoGet struct {
	UserIsAuthenticated    bool       `json:"userIsAuthenticated"`
	ClientIsAuthenticated  bool       `json:"clientIsAuthenticated"`
	CurrentUserId          *string    `json:"currentUserId,omitempty"`
	CurrentUserIdenticonId *string    `json:"currentUserIdenticonId,omitempty"`
	CurrentUserName        *string    `json:"currentUserName,omitempty"`
	CurrentUserEmail       *string    `json:"currentUserEmail,omitempty"`
	CurrentClientId        *string    `json:"currentClientId,omitempty"`
	UserClaims             []ClaimGet `json:"userClaims,omitempty"`
	ClientClaims           []ClaimGet `json:"clientClaims,omitempty"`
}

// NewUserInfoGet instantiates a new UserInfoGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInfoGet(userIsAuthenticated bool, clientIsAuthenticated bool) *UserInfoGet {
	this := UserInfoGet{}
	this.UserIsAuthenticated = userIsAuthenticated
	this.ClientIsAuthenticated = clientIsAuthenticated
	return &this
}

// NewUserInfoGetWithDefaults instantiates a new UserInfoGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInfoGetWithDefaults() *UserInfoGet {
	this := UserInfoGet{}
	return &this
}

// GetUserIsAuthenticated returns the UserIsAuthenticated field value
func (o *UserInfoGet) GetUserIsAuthenticated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UserIsAuthenticated
}

// GetUserIsAuthenticatedOk returns a tuple with the UserIsAuthenticated field value
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetUserIsAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserIsAuthenticated, true
}

// SetUserIsAuthenticated sets field value
func (o *UserInfoGet) SetUserIsAuthenticated(v bool) {
	o.UserIsAuthenticated = v
}

// GetClientIsAuthenticated returns the ClientIsAuthenticated field value
func (o *UserInfoGet) GetClientIsAuthenticated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ClientIsAuthenticated
}

// GetClientIsAuthenticatedOk returns a tuple with the ClientIsAuthenticated field value
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetClientIsAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientIsAuthenticated, true
}

// SetClientIsAuthenticated sets field value
func (o *UserInfoGet) SetClientIsAuthenticated(v bool) {
	o.ClientIsAuthenticated = v
}

// GetCurrentUserId returns the CurrentUserId field value if set, zero value otherwise.
func (o *UserInfoGet) GetCurrentUserId() string {
	if o == nil || IsNil(o.CurrentUserId) {
		var ret string
		return ret
	}
	return *o.CurrentUserId
}

// GetCurrentUserIdOk returns a tuple with the CurrentUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetCurrentUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentUserId) {
		return nil, false
	}
	return o.CurrentUserId, true
}

// HasCurrentUserId returns a boolean if a field has been set.
func (o *UserInfoGet) HasCurrentUserId() bool {
	if o != nil && !IsNil(o.CurrentUserId) {
		return true
	}

	return false
}

// SetCurrentUserId gets a reference to the given string and assigns it to the CurrentUserId field.
func (o *UserInfoGet) SetCurrentUserId(v string) {
	o.CurrentUserId = &v
}

// GetCurrentUserIdenticonId returns the CurrentUserIdenticonId field value if set, zero value otherwise.
func (o *UserInfoGet) GetCurrentUserIdenticonId() string {
	if o == nil || IsNil(o.CurrentUserIdenticonId) {
		var ret string
		return ret
	}
	return *o.CurrentUserIdenticonId
}

// GetCurrentUserIdenticonIdOk returns a tuple with the CurrentUserIdenticonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetCurrentUserIdenticonIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentUserIdenticonId) {
		return nil, false
	}
	return o.CurrentUserIdenticonId, true
}

// HasCurrentUserIdenticonId returns a boolean if a field has been set.
func (o *UserInfoGet) HasCurrentUserIdenticonId() bool {
	if o != nil && !IsNil(o.CurrentUserIdenticonId) {
		return true
	}

	return false
}

// SetCurrentUserIdenticonId gets a reference to the given string and assigns it to the CurrentUserIdenticonId field.
func (o *UserInfoGet) SetCurrentUserIdenticonId(v string) {
	o.CurrentUserIdenticonId = &v
}

// GetCurrentUserName returns the CurrentUserName field value if set, zero value otherwise.
func (o *UserInfoGet) GetCurrentUserName() string {
	if o == nil || IsNil(o.CurrentUserName) {
		var ret string
		return ret
	}
	return *o.CurrentUserName
}

// GetCurrentUserNameOk returns a tuple with the CurrentUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetCurrentUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentUserName) {
		return nil, false
	}
	return o.CurrentUserName, true
}

// HasCurrentUserName returns a boolean if a field has been set.
func (o *UserInfoGet) HasCurrentUserName() bool {
	if o != nil && !IsNil(o.CurrentUserName) {
		return true
	}

	return false
}

// SetCurrentUserName gets a reference to the given string and assigns it to the CurrentUserName field.
func (o *UserInfoGet) SetCurrentUserName(v string) {
	o.CurrentUserName = &v
}

// GetCurrentUserEmail returns the CurrentUserEmail field value if set, zero value otherwise.
func (o *UserInfoGet) GetCurrentUserEmail() string {
	if o == nil || IsNil(o.CurrentUserEmail) {
		var ret string
		return ret
	}
	return *o.CurrentUserEmail
}

// GetCurrentUserEmailOk returns a tuple with the CurrentUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetCurrentUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentUserEmail) {
		return nil, false
	}
	return o.CurrentUserEmail, true
}

// HasCurrentUserEmail returns a boolean if a field has been set.
func (o *UserInfoGet) HasCurrentUserEmail() bool {
	if o != nil && !IsNil(o.CurrentUserEmail) {
		return true
	}

	return false
}

// SetCurrentUserEmail gets a reference to the given string and assigns it to the CurrentUserEmail field.
func (o *UserInfoGet) SetCurrentUserEmail(v string) {
	o.CurrentUserEmail = &v
}

// GetCurrentClientId returns the CurrentClientId field value if set, zero value otherwise.
func (o *UserInfoGet) GetCurrentClientId() string {
	if o == nil || IsNil(o.CurrentClientId) {
		var ret string
		return ret
	}
	return *o.CurrentClientId
}

// GetCurrentClientIdOk returns a tuple with the CurrentClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetCurrentClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentClientId) {
		return nil, false
	}
	return o.CurrentClientId, true
}

// HasCurrentClientId returns a boolean if a field has been set.
func (o *UserInfoGet) HasCurrentClientId() bool {
	if o != nil && !IsNil(o.CurrentClientId) {
		return true
	}

	return false
}

// SetCurrentClientId gets a reference to the given string and assigns it to the CurrentClientId field.
func (o *UserInfoGet) SetCurrentClientId(v string) {
	o.CurrentClientId = &v
}

// GetUserClaims returns the UserClaims field value if set, zero value otherwise.
func (o *UserInfoGet) GetUserClaims() []ClaimGet {
	if o == nil || IsNil(o.UserClaims) {
		var ret []ClaimGet
		return ret
	}
	return o.UserClaims
}

// GetUserClaimsOk returns a tuple with the UserClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetUserClaimsOk() ([]ClaimGet, bool) {
	if o == nil || IsNil(o.UserClaims) {
		return nil, false
	}
	return o.UserClaims, true
}

// HasUserClaims returns a boolean if a field has been set.
func (o *UserInfoGet) HasUserClaims() bool {
	if o != nil && !IsNil(o.UserClaims) {
		return true
	}

	return false
}

// SetUserClaims gets a reference to the given []ClaimGet and assigns it to the UserClaims field.
func (o *UserInfoGet) SetUserClaims(v []ClaimGet) {
	o.UserClaims = v
}

// GetClientClaims returns the ClientClaims field value if set, zero value otherwise.
func (o *UserInfoGet) GetClientClaims() []ClaimGet {
	if o == nil || IsNil(o.ClientClaims) {
		var ret []ClaimGet
		return ret
	}
	return o.ClientClaims
}

// GetClientClaimsOk returns a tuple with the ClientClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoGet) GetClientClaimsOk() ([]ClaimGet, bool) {
	if o == nil || IsNil(o.ClientClaims) {
		return nil, false
	}
	return o.ClientClaims, true
}

// HasClientClaims returns a boolean if a field has been set.
func (o *UserInfoGet) HasClientClaims() bool {
	if o != nil && !IsNil(o.ClientClaims) {
		return true
	}

	return false
}

// SetClientClaims gets a reference to the given []ClaimGet and assigns it to the ClientClaims field.
func (o *UserInfoGet) SetClientClaims(v []ClaimGet) {
	o.ClientClaims = v
}

func (o UserInfoGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserInfoGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userIsAuthenticated"] = o.UserIsAuthenticated
	toSerialize["clientIsAuthenticated"] = o.ClientIsAuthenticated
	if !IsNil(o.CurrentUserId) {
		toSerialize["currentUserId"] = o.CurrentUserId
	}
	if !IsNil(o.CurrentUserIdenticonId) {
		toSerialize["currentUserIdenticonId"] = o.CurrentUserIdenticonId
	}
	if !IsNil(o.CurrentUserName) {
		toSerialize["currentUserName"] = o.CurrentUserName
	}
	if !IsNil(o.CurrentUserEmail) {
		toSerialize["currentUserEmail"] = o.CurrentUserEmail
	}
	if !IsNil(o.CurrentClientId) {
		toSerialize["currentClientId"] = o.CurrentClientId
	}
	if !IsNil(o.UserClaims) {
		toSerialize["userClaims"] = o.UserClaims
	}
	if !IsNil(o.ClientClaims) {
		toSerialize["clientClaims"] = o.ClientClaims
	}
	return toSerialize, nil
}

type NullableUserInfoGet struct {
	value *UserInfoGet
	isSet bool
}

func (v NullableUserInfoGet) Get() *UserInfoGet {
	return v.value
}

func (v *NullableUserInfoGet) Set(val *UserInfoGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInfoGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInfoGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInfoGet(val *UserInfoGet) *NullableUserInfoGet {
	return &NullableUserInfoGet{value: val, isSet: true}
}

func (v NullableUserInfoGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInfoGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

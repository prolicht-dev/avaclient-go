/*
AVACloud API 1.45.0

AVACloud API specification

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avaclient

import (
	"encoding/json"
)

// checks if the TokenResponseGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenResponseGet{}

// TokenResponseGet struct for TokenResponseGet
type TokenResponseGet struct {
	AccessToken      *string           `json:"accessToken,omitempty"`
	Error            *string           `json:"error,omitempty"`
	ErrorDescription *string           `json:"errorDescription,omitempty"`
	ExpiresIn        int64             `json:"expiresIn"`
	HttpErrorReason  *string           `json:"httpErrorReason,omitempty"`
	HttpStatusCode   HttpStatusCode    `json:"httpStatusCode"`
	IdentityToken    *string           `json:"identityToken,omitempty"`
	IsError          bool              `json:"isError"`
	RefreshToken     *string           `json:"refreshToken,omitempty"`
	TokenType        *string           `json:"tokenType,omitempty"`
	ErrorType        ResponseErrorType `json:"errorType"`
}

// NewTokenResponseGet instantiates a new TokenResponseGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenResponseGet(expiresIn int64, httpStatusCode HttpStatusCode, isError bool, errorType ResponseErrorType) *TokenResponseGet {
	this := TokenResponseGet{}
	this.ExpiresIn = expiresIn
	this.HttpStatusCode = httpStatusCode
	this.IsError = isError
	this.ErrorType = errorType
	return &this
}

// NewTokenResponseGetWithDefaults instantiates a new TokenResponseGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenResponseGetWithDefaults() *TokenResponseGet {
	this := TokenResponseGet{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *TokenResponseGet) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *TokenResponseGet) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *TokenResponseGet) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *TokenResponseGet) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *TokenResponseGet) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *TokenResponseGet) SetError(v string) {
	o.Error = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *TokenResponseGet) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *TokenResponseGet) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *TokenResponseGet) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *TokenResponseGet) GetExpiresIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetExpiresInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *TokenResponseGet) SetExpiresIn(v int64) {
	o.ExpiresIn = v
}

// GetHttpErrorReason returns the HttpErrorReason field value if set, zero value otherwise.
func (o *TokenResponseGet) GetHttpErrorReason() string {
	if o == nil || IsNil(o.HttpErrorReason) {
		var ret string
		return ret
	}
	return *o.HttpErrorReason
}

// GetHttpErrorReasonOk returns a tuple with the HttpErrorReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetHttpErrorReasonOk() (*string, bool) {
	if o == nil || IsNil(o.HttpErrorReason) {
		return nil, false
	}
	return o.HttpErrorReason, true
}

// HasHttpErrorReason returns a boolean if a field has been set.
func (o *TokenResponseGet) HasHttpErrorReason() bool {
	if o != nil && !IsNil(o.HttpErrorReason) {
		return true
	}

	return false
}

// SetHttpErrorReason gets a reference to the given string and assigns it to the HttpErrorReason field.
func (o *TokenResponseGet) SetHttpErrorReason(v string) {
	o.HttpErrorReason = &v
}

// GetHttpStatusCode returns the HttpStatusCode field value
func (o *TokenResponseGet) GetHttpStatusCode() HttpStatusCode {
	if o == nil {
		var ret HttpStatusCode
		return ret
	}

	return o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetHttpStatusCodeOk() (*HttpStatusCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpStatusCode, true
}

// SetHttpStatusCode sets field value
func (o *TokenResponseGet) SetHttpStatusCode(v HttpStatusCode) {
	o.HttpStatusCode = v
}

// GetIdentityToken returns the IdentityToken field value if set, zero value otherwise.
func (o *TokenResponseGet) GetIdentityToken() string {
	if o == nil || IsNil(o.IdentityToken) {
		var ret string
		return ret
	}
	return *o.IdentityToken
}

// GetIdentityTokenOk returns a tuple with the IdentityToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetIdentityTokenOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityToken) {
		return nil, false
	}
	return o.IdentityToken, true
}

// HasIdentityToken returns a boolean if a field has been set.
func (o *TokenResponseGet) HasIdentityToken() bool {
	if o != nil && !IsNil(o.IdentityToken) {
		return true
	}

	return false
}

// SetIdentityToken gets a reference to the given string and assigns it to the IdentityToken field.
func (o *TokenResponseGet) SetIdentityToken(v string) {
	o.IdentityToken = &v
}

// GetIsError returns the IsError field value
func (o *TokenResponseGet) GetIsError() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsError
}

// GetIsErrorOk returns a tuple with the IsError field value
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetIsErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsError, true
}

// SetIsError sets field value
func (o *TokenResponseGet) SetIsError(v bool) {
	o.IsError = v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *TokenResponseGet) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *TokenResponseGet) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *TokenResponseGet) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *TokenResponseGet) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *TokenResponseGet) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *TokenResponseGet) SetTokenType(v string) {
	o.TokenType = &v
}

// GetErrorType returns the ErrorType field value
func (o *TokenResponseGet) GetErrorType() ResponseErrorType {
	if o == nil {
		var ret ResponseErrorType
		return ret
	}

	return o.ErrorType
}

// GetErrorTypeOk returns a tuple with the ErrorType field value
// and a boolean to check if the value has been set.
func (o *TokenResponseGet) GetErrorTypeOk() (*ResponseErrorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorType, true
}

// SetErrorType sets field value
func (o *TokenResponseGet) SetErrorType(v ResponseErrorType) {
	o.ErrorType = v
}

func (o TokenResponseGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenResponseGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	toSerialize["expiresIn"] = o.ExpiresIn
	if !IsNil(o.HttpErrorReason) {
		toSerialize["httpErrorReason"] = o.HttpErrorReason
	}
	toSerialize["httpStatusCode"] = o.HttpStatusCode
	if !IsNil(o.IdentityToken) {
		toSerialize["identityToken"] = o.IdentityToken
	}
	toSerialize["isError"] = o.IsError
	if !IsNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["tokenType"] = o.TokenType
	}
	toSerialize["errorType"] = o.ErrorType
	return toSerialize, nil
}

type NullableTokenResponseGet struct {
	value *TokenResponseGet
	isSet bool
}

func (v NullableTokenResponseGet) Get() *TokenResponseGet {
	return v.value
}

func (v *NullableTokenResponseGet) Set(val *TokenResponseGet) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenResponseGet) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenResponseGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenResponseGet(val *TokenResponseGet) *NullableTokenResponseGet {
	return &NullableTokenResponseGet{value: val, isSet: true}
}

func (v NullableTokenResponseGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenResponseGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
